{
  "version": 3,
  "sources": ["../../../src/js/modules/analytics.mjs"],
  "sourcesContent": ["// Minimal analytics module with consent and sampling (opt-in)\nimport { log, createCorrelationId } from '../utils/logger.mjs';\n\nlet enabled = false;\nlet consentRequired = true;\nlet sampleRate = 1.0;\n\nexport function initAnalytics(opts = {}) {\n  enabled = Boolean(opts.enabled);\n  consentRequired = opts.consentRequired !== false;\n  sampleRate = Number.isFinite(opts.sampleRate) ? Math.max(0, Math.min(1, opts.sampleRate)) : 1.0;\n}\n\nfunction hasConsent() {\n  try {\n    const v = (localStorage && localStorage.getItem('consent_analytics')) || '';\n    return String(v).toLowerCase() === 'granted';\n  } catch { return false; }\n}\n\nfunction sampledIn() {\n  if (sampleRate >= 1) return true;\n  return Math.random() < sampleRate;\n}\n\nexport function track(eventName, properties = {}) {\n  if (!enabled) return false;\n  if (consentRequired && !hasConsent()) return false;\n  if (!sampledIn()) return false;\n  const id = createCorrelationId();\n  log('info', 'analytics_event', { id, event: eventName, props: properties });\n  return true;\n}\n\n"],
  "mappings": "2EAGA,IAAIA,EAAU,GACVC,EAAkB,GAClBC,EAAa,EAEV,SAASC,EAAcC,EAAO,CAAC,EAAG,CACvCJ,EAAU,EAAQI,EAAK,QACvBH,EAAkBG,EAAK,kBAAoB,GAC3CF,EAAa,OAAO,SAASE,EAAK,UAAU,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGA,EAAK,UAAU,CAAC,EAAI,CAC9F,CAEA,SAASC,GAAa,CACpB,GAAI,CACF,IAAMC,EAAK,cAAgB,aAAa,QAAQ,mBAAmB,GAAM,GACzE,OAAO,OAAOA,CAAC,EAAE,YAAY,IAAM,SACrC,OAAQ,GAAE,MAAO,EAAO,CAC1B,CAEA,SAASC,GAAY,CACnB,OAAIL,GAAc,EAAU,GACrB,KAAK,OAAO,EAAIA,CACzB,CAEO,SAASM,EAAMC,EAAWC,EAAa,CAAC,EAAG,CAGhD,GAFI,CAACV,GACDC,GAAmB,CAACI,EAAW,GAC/B,CAACE,EAAU,EAAG,MAAO,GACzB,IAAMI,EAAKC,EAAoB,EAC/B,OAAAC,EAAI,OAAQ,kBAAmB,CAAE,GAAAF,EAAI,MAAOF,EAAW,MAAOC,CAAW,CAAC,EACnE,EACT",
  "names": ["enabled", "consentRequired", "sampleRate", "initAnalytics", "opts", "hasConsent", "v", "sampledIn", "track", "eventName", "properties", "id", "createCorrelationId", "log"]
}
