{
  "version": 3,
  "sources": ["../../../node_modules/bootstrap/js/src/collapse.js"],
  "sourcesContent": ["/**\n * --------------------------------------------------------------------------\n * Bootstrap collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport {\n  defineJQueryPlugin,\n  getElement,\n  reflow\n} from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'collapse'\nconst DATA_KEY = 'bs.collapse'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_COLLAPSE = 'collapse'\nconst CLASS_NAME_COLLAPSING = 'collapsing'\nconst CLASS_NAME_COLLAPSED = 'collapsed'\nconst CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`\nconst CLASS_NAME_HORIZONTAL = 'collapse-horizontal'\n\nconst WIDTH = 'width'\nconst HEIGHT = 'height'\n\nconst SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"collapse\"]'\n\nconst Default = {\n  parent: null,\n  toggle: true\n}\n\nconst DefaultType = {\n  parent: '(null|element)',\n  toggle: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Collapse extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._isTransitioning = false\n    this._triggerArray = []\n\n    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE)\n\n    for (const elem of toggleList) {\n      const selector = SelectorEngine.getSelectorFromElement(elem)\n      const filterElement = SelectorEngine.find(selector)\n        .filter(foundElement => foundElement === this._element)\n\n      if (selector !== null && filterElement.length) {\n        this._triggerArray.push(elem)\n      }\n    }\n\n    this._initializeChildren()\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._triggerArray, this._isShown())\n    }\n\n    if (this._config.toggle) {\n      this.toggle()\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    if (this._isShown()) {\n      this.hide()\n    } else {\n      this.show()\n    }\n  }\n\n  show() {\n    if (this._isTransitioning || this._isShown()) {\n      return\n    }\n\n    let activeChildren = []\n\n    // find active children\n    if (this._config.parent) {\n      activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES)\n        .filter(element => element !== this._element)\n        .map(element => Collapse.getOrCreateInstance(element, { toggle: false }))\n    }\n\n    if (activeChildren.length && activeChildren[0]._isTransitioning) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    for (const activeInstance of activeChildren) {\n      activeInstance.hide()\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.classList.remove(CLASS_NAME_COLLAPSE)\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n\n    this._element.style[dimension] = 0\n\n    this._addAriaAndCollapsedClass(this._triggerArray, true)\n    this._isTransitioning = true\n\n    const complete = () => {\n      this._isTransitioning = false\n\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n      this._element.style[dimension] = ''\n\n      EventHandler.trigger(this._element, EVENT_SHOWN)\n    }\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n\n    this._queueCallback(complete, this._element, true)\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n    if (this._isTransitioning || !this._isShown()) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    reflow(this._element)\n\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n    for (const trigger of this._triggerArray) {\n      const element = SelectorEngine.getElementFromSelector(trigger)\n\n      if (element && !this._isShown(element)) {\n        this._addAriaAndCollapsedClass([trigger], false)\n      }\n    }\n\n    this._isTransitioning = true\n\n    const complete = () => {\n      this._isTransitioning = false\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE)\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._element.style[dimension] = ''\n\n    this._queueCallback(complete, this._element, true)\n  }\n\n  // Private\n  _isShown(element = this._element) {\n    return element.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  _configAfterMerge(config) {\n    config.toggle = Boolean(config.toggle) // Coerce string values\n    config.parent = getElement(config.parent)\n    return config\n  }\n\n  _getDimension() {\n    return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT\n  }\n\n  _initializeChildren() {\n    if (!this._config.parent) {\n      return\n    }\n\n    const children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE)\n\n    for (const element of children) {\n      const selected = SelectorEngine.getElementFromSelector(element)\n\n      if (selected) {\n        this._addAriaAndCollapsedClass([element], this._isShown(selected))\n      }\n    }\n  }\n\n  _getFirstLevelChildren(selector) {\n    const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent)\n    // remove children if greater depth\n    return SelectorEngine.find(selector, this._config.parent).filter(element => !children.includes(element))\n  }\n\n  _addAriaAndCollapsedClass(triggerArray, isOpen) {\n    if (!triggerArray.length) {\n      return\n    }\n\n    for (const element of triggerArray) {\n      element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen)\n      element.setAttribute('aria-expanded', isOpen)\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    const _config = {}\n    if (typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false\n    }\n\n    return this.each(function () {\n      const data = Collapse.getOrCreateInstance(this, _config)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A' || (event.delegateTarget && event.delegateTarget.tagName === 'A')) {\n    event.preventDefault()\n  }\n\n  for (const element of SelectorEngine.getMultipleElementsFromSelector(this)) {\n    Collapse.getOrCreateInstance(element, { toggle: false }).toggle()\n  }\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Collapse)\n\nexport default Collapse\n"],
  "mappings": "4eAoBA,IAAMA,EAAO,WAEPC,EAAY,eACZC,EAAe,YAEfC,EAAa,OAAOF,CAAS,GAC7BG,EAAc,QAAQH,CAAS,GAC/BI,EAAa,OAAOJ,CAAS,GAC7BK,EAAe,SAASL,CAAS,GACjCM,EAAuB,QAAQN,CAAS,GAAGC,CAAY,GAEvDM,EAAkB,OAClBC,EAAsB,WACtBC,EAAwB,aACxBC,EAAuB,YACvBC,EAA6B,WAAWH,CAAmB,KAAKA,CAAmB,GACnFI,EAAwB,sBAExBC,EAAQ,QACRC,EAAS,SAETC,EAAmB,uCACnBC,EAAuB,8BAEvBC,EAAU,CACdC,OAAQ,KACRC,OAAQ,EACV,EAEMC,EAAc,CAClBF,OAAQ,iBACRC,OAAQ,SACV,EAMA,MAAME,UAAiBC,CAAc,CACnCC,YAAYC,EAASC,EAAQ,CAC3B,MAAMD,EAASC,CAAM,EAErB,KAAKC,iBAAmB,GACxB,KAAKC,cAAgB,CAAA,EAErB,IAAMC,EAAaC,EAAeC,KAAKd,CAAoB,EAE3D,QAAWe,KAAQH,EAAY,CAC7B,IAAMI,EAAWH,EAAeI,uBAAuBF,CAAI,EACrDG,EAAgBL,EAAeC,KAAKE,CAAQ,EAC/CG,OAAOC,GAAgBA,IAAiB,KAAKC,QAAQ,EAEpDL,IAAa,MAAQE,EAAcI,QACrC,KAAKX,cAAcY,KAAKR,CAAI,CAEhC,CAEA,KAAKS,oBAAmB,EAEnB,KAAKC,QAAQvB,QAChB,KAAKwB,0BAA0B,KAAKf,cAAe,KAAKgB,SAAQ,CAAE,EAGhE,KAAKF,QAAQtB,QACf,KAAKA,OAAM,CAEf,CAGA,WAAWF,SAAU,CACnB,OAAOA,CACT,CAEA,WAAWG,aAAc,CACvB,OAAOA,CACT,CAEA,WAAWrB,MAAO,CAChB,OAAOA,CACT,CAGAoB,QAAS,CACH,KAAKwB,SAAQ,EACf,KAAKC,KAAI,EAET,KAAKC,KAAI,CAEb,CAEAA,MAAO,CACL,GAAI,KAAKnB,kBAAoB,KAAKiB,SAAQ,EACxC,OAGF,IAAIG,EAAiB,CAAA,EAcrB,GAXI,KAAKL,QAAQvB,SACf4B,EAAiB,KAAKC,uBAAuBhC,CAAgB,EAC1DoB,OAAOX,GAAWA,IAAY,KAAKa,QAAQ,EAC3CW,IAAIxB,GAAWH,EAAS4B,oBAAoBzB,EAAS,CAAEL,OAAQ,EAAM,CAAC,CAAC,GAGxE2B,EAAeR,QAAUQ,EAAe,CAAC,EAAEpB,kBAI5BwB,EAAaC,QAAQ,KAAKd,SAAUnC,CAAU,EAClDkD,iBACb,OAGF,QAAWC,KAAkBP,EAC3BO,EAAeT,KAAI,EAGrB,IAAMU,EAAY,KAAKC,cAAa,EAEpC,KAAKlB,SAASmB,UAAUC,OAAOjD,CAAmB,EAClD,KAAK6B,SAASmB,UAAUE,IAAIjD,CAAqB,EAEjD,KAAK4B,SAASsB,MAAML,CAAS,EAAI,EAEjC,KAAKZ,0BAA0B,KAAKf,cAAe,EAAI,EACvD,KAAKD,iBAAmB,GAExB,IAAMkC,EAAWA,IAAM,CACrB,KAAKlC,iBAAmB,GAExB,KAAKW,SAASmB,UAAUC,OAAOhD,CAAqB,EACpD,KAAK4B,SAASmB,UAAUE,IAAIlD,EAAqBD,CAAe,EAEhE,KAAK8B,SAASsB,MAAML,CAAS,EAAI,GAEjCJ,EAAaC,QAAQ,KAAKd,SAAUlC,CAAW,CACjD,EAGM0D,EAAa,SADUP,EAAU,CAAC,EAAEQ,YAAW,EAAKR,EAAUS,MAAM,CAAC,CAC3B,GAEhD,KAAKC,eAAeJ,EAAU,KAAKvB,SAAU,EAAI,EACjD,KAAKA,SAASsB,MAAML,CAAS,EAAI,GAAG,KAAKjB,SAASwB,CAAU,CAAC,IAC/D,CAEAjB,MAAO,CAML,GALI,KAAKlB,kBAAoB,CAAC,KAAKiB,SAAQ,GAIxBO,EAAaC,QAAQ,KAAKd,SAAUjC,CAAU,EAClDgD,iBACb,OAGF,IAAME,EAAY,KAAKC,cAAa,EAEpC,KAAKlB,SAASsB,MAAML,CAAS,EAAI,GAAG,KAAKjB,SAAS4B,sBAAqB,EAAGX,CAAS,CAAC,KAEpFY,EAAAA,OAAO,KAAK7B,QAAQ,EAEpB,KAAKA,SAASmB,UAAUE,IAAIjD,CAAqB,EACjD,KAAK4B,SAASmB,UAAUC,OAAOjD,EAAqBD,CAAe,EAEnE,QAAW4C,KAAW,KAAKxB,cAAe,CACxC,IAAMH,EAAUK,EAAesC,uBAAuBhB,CAAO,EAEzD3B,GAAW,CAAC,KAAKmB,SAASnB,CAAO,GACnC,KAAKkB,0BAA0B,CAACS,CAAO,EAAG,EAAK,CAEnD,CAEA,KAAKzB,iBAAmB,GAExB,IAAMkC,EAAWA,IAAM,CACrB,KAAKlC,iBAAmB,GACxB,KAAKW,SAASmB,UAAUC,OAAOhD,CAAqB,EACpD,KAAK4B,SAASmB,UAAUE,IAAIlD,CAAmB,EAC/C0C,EAAaC,QAAQ,KAAKd,SAAUhC,CAAY,CAClD,EAEA,KAAKgC,SAASsB,MAAML,CAAS,EAAI,GAEjC,KAAKU,eAAeJ,EAAU,KAAKvB,SAAU,EAAI,CACnD,CAGAM,SAASnB,EAAU,KAAKa,SAAU,CAChC,OAAOb,EAAQgC,UAAUY,SAAS7D,CAAe,CACnD,CAEA8D,kBAAkB5C,EAAQ,CACxBA,OAAAA,EAAON,OAASmD,EAAQ7C,EAAON,OAC/BM,EAAOP,OAASqD,EAAAA,WAAW9C,EAAOP,MAAM,EACjCO,CACT,CAEA8B,eAAgB,CACd,OAAO,KAAKlB,SAASmB,UAAUY,SAASxD,CAAqB,EAAIC,EAAQC,CAC3E,CAEA0B,qBAAsB,CACpB,GAAI,CAAC,KAAKC,QAAQvB,OAChB,OAGF,IAAMsD,EAAW,KAAKzB,uBAAuB/B,CAAoB,EAEjE,QAAWQ,KAAWgD,EAAU,CAC9B,IAAMC,EAAW5C,EAAesC,uBAAuB3C,CAAO,EAE1DiD,GACF,KAAK/B,0BAA0B,CAAClB,CAAO,EAAG,KAAKmB,SAAS8B,CAAQ,CAAC,CAErE,CACF,CAEA1B,uBAAuBf,EAAU,CAC/B,IAAMwC,EAAW3C,EAAeC,KAAKnB,EAA4B,KAAK8B,QAAQvB,MAAM,EAEpF,OAAOW,EAAeC,KAAKE,EAAU,KAAKS,QAAQvB,MAAM,EAAEiB,OAAOX,GAAW,CAACgD,EAASE,SAASlD,CAAO,CAAC,CACzG,CAEAkB,0BAA0BiC,EAAcC,EAAQ,CAC9C,GAAKD,EAAarC,OAIlB,QAAWd,KAAWmD,EACpBnD,EAAQgC,UAAUrC,OAAOT,EAAsB,CAACkE,CAAM,EACtDpD,EAAQqD,aAAa,gBAAiBD,CAAM,CAEhD,CAGA,OAAOE,gBAAgBrD,EAAQ,CAC7B,IAAMgB,EAAU,CAAA,EAChB,OAAI,OAAOhB,GAAW,UAAY,YAAYsD,KAAKtD,CAAM,IACvDgB,EAAQtB,OAAS,IAGZ,KAAK6D,KAAK,UAAY,CAC3B,IAAMC,EAAO5D,EAAS4B,oBAAoB,KAAMR,CAAO,EAEvD,GAAI,OAAOhB,GAAW,SAAU,CAC9B,GAAI,OAAOwD,EAAKxD,CAAM,GAAM,YAC1B,MAAM,IAAIyD,UAAU,oBAAoBzD,CAAM,GAAG,EAGnDwD,EAAKxD,CAAM,EAAC,CACd,CACF,CAAC,CACH,CACF,CAMAyB,OAAAA,EAAaiC,GAAGC,SAAU9E,EAAsBU,EAAsB,SAAUqE,EAAO,EAEjFA,EAAMC,OAAOC,UAAY,KAAQF,EAAMG,gBAAkBH,EAAMG,eAAeD,UAAY,MAC5FF,EAAMI,eAAc,EAGtB,QAAWjE,KAAWK,EAAe6D,gCAAgC,IAAI,EACvErE,EAAS4B,oBAAoBzB,EAAS,CAAEL,OAAQ,EAAM,CAAC,EAAEA,OAAM,CAEnE,CAAC,EAMDwE,EAAAA,mBAAmBtE,CAAQ",
  "names": ["NAME", "EVENT_KEY", "DATA_API_KEY", "EVENT_SHOW", "EVENT_SHOWN", "EVENT_HIDE", "EVENT_HIDDEN", "EVENT_CLICK_DATA_API", "CLASS_NAME_SHOW", "CLASS_NAME_COLLAPSE", "CLASS_NAME_COLLAPSING", "CLASS_NAME_COLLAPSED", "CLASS_NAME_DEEPER_CHILDREN", "CLASS_NAME_HORIZONTAL", "WIDTH", "HEIGHT", "SELECTOR_ACTIVES", "SELECTOR_DATA_TOGGLE", "Default", "parent", "toggle", "DefaultType", "Collapse", "BaseComponent", "constructor", "element", "config", "_isTransitioning", "_triggerArray", "toggleList", "SelectorEngine", "find", "elem", "selector", "getSelectorFromElement", "filterElement", "filter", "foundElement", "_element", "length", "push", "_initializeChildren", "_config", "_addAriaAndCollapsedClass", "_isShown", "hide", "show", "activeChildren", "_getFirstLevelChildren", "map", "getOrCreateInstance", "EventHandler", "trigger", "defaultPrevented", "activeInstance", "dimension", "_getDimension", "classList", "remove", "add", "style", "complete", "scrollSize", "toUpperCase", "slice", "_queueCallback", "getBoundingClientRect", "reflow", "getElementFromSelector", "contains", "_configAfterMerge", "Boolean", "getElement", "children", "selected", "includes", "triggerArray", "isOpen", "setAttribute", "jQueryInterface", "test", "each", "data", "TypeError", "on", "document", "event", "target", "tagName", "delegateTarget", "preventDefault", "getMultipleElementsFromSelector", "defineJQueryPlugin"]
}
