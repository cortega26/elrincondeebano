"use strict"; (() => {
    var ie = (n, r) => () => (r || n((r = { exports: {} }).exports, r), r.exports); var ve = ie((Ee, D) => {
        var z = { path: "/service-worker.js", scope: "/", updateCheckInterval: 3e5 }; function K() { if (!("serviceWorker" in navigator)) { console.warn("Service workers are not supported in this browser"); return } window.addEventListener("load", async () => { try { ce() } catch (n) { console.error("Service Worker initialization failed:", n), me("Failed to initialize service worker. Some features may not work offline.") } }) } async function ce() { try { let n = await navigator.serviceWorker.register(z.path, { scope: z.scope }); console.log("ServiceWorker registered successfully:", n.scope), se(n), de(n), le(), ue() } catch (n) { throw console.error("ServiceWorker registration failed:", n), n } } function se(n) { n.addEventListener("updatefound", () => { let r = n.installing; r.addEventListener("statechange", () => { r.state === "installed" && navigator.serviceWorker.controller && r.postMessage({ type: "SKIP_WAITING" }) }) }) } function de(n) { V(n), setInterval(() => { V(n) }, z.updateCheckInterval) } async function V(n) { try { await n.update(); let r = await fetch("/_products/product_data.json", { headers: { "Cache-Control": "no-cache", Pragma: "no-cache" } }); if (r.ok) { let p = (await r.json()).version, l = localStorage.getItem("productDataVersion"); p !== l && (n.active?.postMessage({ type: "INVALIDATE_PRODUCT_CACHE" }), localStorage.setItem("productDataVersion", p), pe(null, "New product data available")) } } catch (r) { console.warn("Update check failed:", r) } } function le() { let n = !1; navigator.serviceWorker.addEventListener("controllerchange", () => { n || (n = !0, window.location.reload()) }) } function ue() { let n = () => { let r = document.getElementById("offline-indicator"); r && (r.style.display = navigator.onLine ? "none" : "block"), navigator.onLine || fe("You are currently offline. Some features may be limited.") }; window.addEventListener("online", n), window.addEventListener("offline", n), n() } function pe(n, r = "Una versi\xF3n est\xE1 disponible") { let c = _(r, "Actualizar ahora", "Despu\xE9s", () => { n ? n.postMessage({ type: "SKIP_WAITING" }) : window.location.reload() }); N(c) } function me(n) { let r = _(n, "Reload", "Dismiss", () => window.location.reload()); N(r) } function fe(n) { let r = _(n, "Retry", "Dismiss", () => window.location.reload()); N(r) } function _(n, r, c, p) {
            let l = document.createElement("div"); return l.className = "notification-toast", l.setAttribute("role", "alert"), l.setAttribute("aria-live", "polite"), l.innerHTML = `
        <div class="notification-content">
            <p>${n}</p>
            <div class="notification-actions">
                <button class="primary-action">${r}</button>
                <button class="secondary-action">${c}</button>
            </div>
        </div>
    `, l.querySelector(".primary-action").addEventListener("click", () => { p(), l.remove() }), l.querySelector(".secondary-action").addEventListener("click", () => { l.remove() }), l
        } function N(n) { let r = document.querySelector(".notification-toast"); r && r.remove(), document.body.appendChild(n), setTimeout(() => { document.body.contains(n) && n.remove() }, 300 * 1e3) } typeof navigator < "u" && "serviceWorker" in navigator && K(); var ye = (n, r = 100) => { let c = new Map; return (...p) => { let l = JSON.stringify(p); if (c.has(l)) return c.get(l); let g = n(...p); if (c.size >= r) { let m = c.keys().next().value; c.delete(m) } return c.set(l, g), g } }, ge = (n, r) => { let c; return (...p) => { clearTimeout(c), c = setTimeout(() => n(...p), r) } }, G = n => { let r = `${n.name}-${n.category}`.toLowerCase(), c = 0; for (let p = 0; p < r.length; p++) { let l = r.charCodeAt(p); c = (c << 5) - c + l, c = c & c } return `pid-${Math.abs(c)}` }, A = n => { let r = document.createElement("div"); return r.textContent = n, r.innerHTML }, he = async () => { try { let n = await fetch("/_products/product_data.json", { headers: { "Content-Type": "application/json", "X-Requested-With": "XMLHttpRequest" } }); if (!n.ok) throw new Error(`HTTP error. Status: ${n.status}`); return (await n.json()).products.map(c => ({ ...c, id: G(c), name: A(c.name), description: A(c.description), category: A(c.category) })) } catch (n) { throw console.error("Error al obtener productos:", n), f(`Error al cargar los productos. Por favor, verifique su conexi\xF3n a internet e int\xE9ntelo de nuevo. (Error: ${n.message})`), n } }, s = (n, r = {}, c = []) => { let p = document.createElement(n); return Object.entries(r).forEach(([l, g]) => { l === "text" ? p.textContent = g : p.setAttribute(l, g) }), c.forEach(l => { typeof l == "string" ? p.appendChild(document.createTextNode(l)) : p.appendChild(l) }), p }, f = n => { let r = s("div", { class: "error-message", role: "alert" }, [s("p", {}, [n]), s("button", { class: "retry-button" }, ["Intentar nuevamente"])]), c = document.getElementById("product-container"); c ? (c.innerHTML = "", c.appendChild(r), r.querySelector(".retry-button").addEventListener("click", J)) : console.error("Contenedor de productos no encontrado") }; typeof window < "u" && window.addEventListener("error", n => { console.error("Error global:", n.error), f("Ocurri\xF3 un error inesperado. Por favor, recarga la p\xE1gina.") }); var J = async () => {
            if (console.log("Initializing app..."), typeof DOMPurify > "u") try { await new Promise((e, a) => { let o = document.createElement("script"); o.src = "https://cdnjs.cloudflare.com/ajax/libs/dompurify/2.3.8/purify.min.js", o.onload = e, o.onerror = a, document.head.appendChild(o) }) } catch (e) { console.error("Failed to load DOMPurify:", e), f("Failed to load required dependencies. Please refresh the page."); return } let n = document.getElementById("navbar-container"), r = document.getElementById("footer-container"), c = document.getElementById("product-container"), p = document.getElementById("sort-options"), l = document.getElementById("filter-keyword"), g = [], m = JSON.parse(localStorage.getItem("cart")) || [], T = () => { let e = document.getElementById("offline-indicator"); e && (e.style.display = navigator.onLine ? "none" : "block"), navigator.onLine || console.log("App is offline. Using cached data if available.") }, W = async (e, a) => { if (!e) { console.warn(`Contenedor no encontrado para el componente: ${a}`); return } try { let o = await fetch(a); if (!o.ok) throw new Error(`HTTP error! status: ${o.status}`); let i = await o.text(), t = DOMPurify.sanitize(i, { USE_PROFILES: { html: !0 }, ALLOWED_TAGS: ["div", "span", "p", "h1", "h2", "h3", "h4", "h5", "h6", "ul", "ol", "li", "a", "img", "br", "strong", "em", "button", "nav", "footer", "header", "main", "section"], ALLOWED_ATTR: ["href", "src", "alt", "class", "id", "style", "aria-label", "role", "type", "data-bs-toggle", "data-bs-target", "aria-controls", "aria-expanded"] }); e.innerHTML = ""; let u = new DOMParser().parseFromString(t, "text/html"); Array.from(u.body.children).forEach(y => { e.appendChild(y.cloneNode(!0)) }) } catch (o) { throw console.error("Error al cargar componente:", { component: a, message: o.message }), o } }, X = async () => { try { await Promise.all([W(n, "/pages/navbar.html"), W(r, "/pages/footer.html")]), console.log("Components loaded successfully") } catch (e) { console.error("Error al cargar componentes:", e), f("Error al cargar los componentes de la p\xE1gina. Por favor, actualice la p\xE1gina o verifique su conexi\xF3n a internet.") } }, Y = (e, a, o = "CLP") => { let i = new Intl.NumberFormat("es-CL", { style: "currency", currency: o, minimumFractionDigits: 0 }), t = i.format(e); if (a) { let d = e - a, u = i.format(d); return s("div", { class: "precio-container" }, [s("span", { class: "precio-descuento", "aria-label": "Precio con descuento" }, [u]), s("span", { class: "precio-original", "aria-label": "Precio original" }, [s("span", { class: "tachado" }, [t])])]) } return s("div", { class: "precio-container" }, [s("span", { class: "precio", "aria-label": "Precio" }, [t])]) }, H = e => { let a = s("div", { class: "quantity-control" }), o = s("button", { class: "quantity-btn", "aria-label": "Decrease quantity" }, ["-"]), i = s("button", { class: "quantity-btn", "aria-label": "Increase quantity" }, ["+"]), t = s("input", { type: "number", class: "quantity-input", value: Math.max(x(e.id), 1), min: "1", max: "50", "aria-label": "Quantity", "data-id": e.id }); return o.addEventListener("click", () => I(e, -1)), i.addEventListener("click", () => I(e, 1)), t.addEventListener("change", d => { let u = parseInt(d.target.value, 10), y = x(e.id); I(e, u - y) }), a.appendChild(o), a.appendChild(t), a.appendChild(i), a }, x = e => { let a = m.find(o => o.id === e); return a ? a.quantity : 0 }, Z = e => { let a = document.createDocumentFragment(), o = window.location.pathname.includes("/pages/"); e.forEach(t => { let { id: d, name: u, description: y, image_path: C, price: B, discount: M, stock: O } = t, k = s("div", { class: `producto col-12 col-sm-6 col-md-4 col-lg-3 mb-4 ${O ? "" : "agotado"}`, "aria-label": `Product: ${u}` }), P = s("div", { class: "card" }), E; o ? E = `../${C.replace(/^\//, "")}` : E = C; let $ = s("img", { "data-src": E, alt: u, class: "card-img-top lazyload" }); P.appendChild($); let h = s("div", { class: "card-body" }); h.appendChild(s("h3", { class: "card-title" }, [u])), h.appendChild(s("p", { class: "card-text" }, [y])), h.appendChild(Y(B, M)); let U = m.find(v => v.id === d), Q = U ? U.quantity : 0; if (Q > 0) { let v = H(t); h.appendChild(v); let S = v.querySelector(".quantity-input"); S && (S.value = Q) } else { let v = s("button", { class: "btn btn-primary mt-2", "data-id": d, "aria-label": `Add ${u} to cart` }, ["Agregar"]); v.addEventListener("click", () => { F(t, 1); let S = H(t); v.replaceWith(S), S.classList.add("fade-in-up") }), h.appendChild(v) } P.appendChild(h), k.appendChild(P), a.appendChild(k) }); let i = document.getElementById("product-container"); i.innerHTML = "", i.appendChild(a), ee() }, ee = () => { let e = new IntersectionObserver((a, o) => { a.forEach(i => { if (i.isIntersecting) { let t = i.target; t.src = t.dataset.src, t.classList.remove("lazyload"), o.unobserve(t) } }) }, { rootMargin: "100px" }); document.querySelectorAll("img.lazyload").forEach(a => e.observe(a)) }, te = (e, a, o) => e.filter(i => (i.name.toLowerCase().includes(a.toLowerCase()) || i.description.toLowerCase().includes(a.toLowerCase())) && i.stock).sort((i, t) => ne(i, t, o)), ne = (e, a, o) => { if (!o || o === "original") return e.originalIndex - a.originalIndex; let [i, t] = o.split("-"), d = i === "price" ? e.price - (e.discount || 0) : e.name.toLowerCase(), u = i === "price" ? a.price - (a.discount || 0) : a.name.toLowerCase(); return t === "asc" ? d < u ? -1 : d > u ? 1 : 0 : u < d ? -1 : u > d ? 1 : 0 }, ae = ye(te), w = () => { try { let e = p.value || "original", a = l.value.trim(), o = ae(g, a, e); Z(o) } catch (e) { console.error("Error al actualizar visualizaci\xF3n de productos:", e), f("Error al actualizar la visualizaci\xF3n de productos. Por favor, intenta m\xE1s tarde.") } }, j = ge(w, 300), L = () => { let e = document.getElementById("cart-count"), a = m.reduce((o, i) => o + i.quantity, 0); e.textContent = a, e.setAttribute("aria-label", `${a} items in cart`) }, F = (e, a) => { try { let o = m.find(t => t.id === e.id); o ? o.quantity = Math.min(o.quantity + a, 50) : m.push({ id: e.id, name: e.name, description: e.description, price: e.price, discount: e.discount, image_path: e.image_path, quantity: Math.min(a, 50), category: e.category, stock: e.stock }), q(), L(), b(); let i = document.querySelector(`[data-id="${e.id}"].quantity-input`); i && (i.value = Math.max(x(e.id), 1)) } catch (o) { console.error("Error al agregar al carrito:", o), f("Error al agregar el art\xEDculo al carrito. Por favor, intenta nuevamente.") } }, R = e => { try { m = m.filter(a => a.id !== e), q(), L(), b(), w() } catch (a) { console.error("Error al eliminar del carrito:", a), f("Error al eliminar el art\xEDculo del carrito. Por favor, intenta nuevamente.") } }, I = (e, a) => { try { let o = m.find(t => t.id === e.id), i = o ? o.quantity + a : 1; if (i <= 0) R(e.id), w(); else if (i <= 50) { o ? o.quantity = i : F(e, 1), q(), L(), b(); let t = document.querySelector(`[data-id="${e.id}"].quantity-input`); t && (t.value = i, t.classList.add("quantity-changed"), setTimeout(() => t.classList.remove("quantity-changed"), 300)) } } catch (o) { console.error("Error al actualizar cantidad:", o), f("Error al actualizar la cantidad. Por favor, intenta nuevamente.") } }, oe = () => { try { m = [], q(), L(), b(), w() } catch (e) { console.error("Error al vaciar el carrito:", e), f("Error al vaciar el carrito. Por favor, int\xE9ntelo de nuevo.") } }, q = () => { try { localStorage.setItem("cart", JSON.stringify(m)) } catch (e) { console.error("Error al guardar el carrito:", e), f("Error al guardar el carrito. Tus cambios podr\xEDan no persistir.") } }, b = () => { let e = document.getElementById("cart-items"), a = document.getElementById("cart-total"); e.innerHTML = ""; let o = 0; m.forEach(t => { let d = t.price - (t.discount || 0), u = s("div", { class: "cart-item mb-3 d-flex align-items-center", "aria-label": `Cart item: ${t.name}`, style: "flex-direction: row; align-items: center;" }), y = s("div", { class: "cart-item-content flex-grow-1" }); y.appendChild(s("div", { class: "fw-bold mb-1" }, [t.name])); let C = s("div", { class: "mb-2" }), B = s("button", { class: "btn btn-sm btn-secondary decrease-quantity", "data-id": t.id, "aria-label": `Disminuir cantidad de ${t.name}` }, ["-"]), M = s("button", { class: "btn btn-sm btn-secondary increase-quantity", "data-id": t.id, "aria-label": `Aumentar cantidad de ${t.name}` }, ["+"]), O = s("span", { class: "mx-2 item-quantity", "aria-label": `Cantidad de ${t.name}` }, [t.quantity.toString()]); C.appendChild(B), C.appendChild(O), C.appendChild(M), y.appendChild(C), y.appendChild(s("div", { class: "text-muted small" }, [`Precio: $${d.toLocaleString("es-CL")}`])), y.appendChild(s("div", { class: "fw-bold" }, [`Subtotal: $${(d * t.quantity).toLocaleString("es-CL")}`])); let k = s("button", { class: "btn btn-sm btn-danger remove-item mt-2", "data-id": t.id, "aria-label": `Eliminar ${t.name} del carrito` }, ["Eliminar"]); y.appendChild(k); let P = window.location.pathname.includes("/pages/"), E; P ? E = `../${t.image_path.replace(/^\//, "")}` : E = t.image_path; let $ = s("div", { class: "cart-item-thumbnail", style: "width: 60px; height: 60px; flex-shrink: 0; margin-left: auto;" }), h = s("img", { src: E, alt: t.name, class: "img-fluid rounded", style: "width: 100%; height: 100%; object-fit: cover;" }); $.appendChild(h), u.appendChild(y), u.appendChild($), e.appendChild(u), o += d * t.quantity }), a.textContent = `Total: $${o.toLocaleString("es-CL")}`, a.setAttribute("aria-label", `Total: $${o.toLocaleString("es-CL")}`); let i = document.getElementById("payment-credit-container"); if (i) if (o >= 3e4) i.classList.remove("d-none"); else { i.classList.add("d-none"); let t = i.querySelector("input"); t && (t.checked = !1) } }, re = () => {
                let e = document.querySelector('input[name="paymentMethod"]:checked'); if (!e) { alert("Por favor seleccione un m\xE9todo de pago"); return } let a = `Mi pedido:

`; m.forEach(t => {
                    let d = t.price - (t.discount || 0); a += `${t.name}
`, a += `Cantidad: ${t.quantity}
`, a += `Precio unitario: $${d.toLocaleString("es-CL")}
`, a += `Subtotal: $${(d * t.quantity).toLocaleString("es-CL")}

`}); let o = m.reduce((t, d) => t + (d.price - (d.discount || 0)) * d.quantity, 0); a += `Total: $${o.toLocaleString("es-CL")}
`, a += `M\xE9todo de pago: ${e.value}`; let i = encodeURIComponent(a); window.open(`https://wa.me/56951118901?text=${i}`, "_blank")
            }; try { if (await X(), g = await he(), g.length === 0) { f("No hay productos disponibles. Por favor, intenta m\xE1s tarde."); return } let e = document.querySelector("main").dataset.category; e && (g = g.filter(t => t.category === e)), p.addEventListener("change", j), l.addEventListener("input", j), w(), window.addEventListener("online", T), window.addEventListener("offline", T), T(); let a = document.getElementById("cart-icon"), o = document.getElementById("empty-cart"), i = document.getElementById("submit-cart"); a.addEventListener("click", () => { if (typeof window.bootstrap < "u" && window.bootstrap.Offcanvas) { let t = new window.bootstrap.Offcanvas(document.getElementById("cartOffcanvas")); b(), t.show() } else { console.error("Bootstrap Offcanvas no est\xE1 disponible"), b(); let t = document.getElementById("cartOffcanvas"); t && t.classList.add("show") } }), o.addEventListener("click", oe), i.addEventListener("click", re), document.getElementById("cart-items").addEventListener("click", t => { let d = t.target, u = d.closest("[data-id]")?.dataset.id; u && (d.classList.contains("decrease-quantity") ? I({ id: u }, -1) : d.classList.contains("increase-quantity") ? I({ id: u }, 1) : d.classList.contains("remove-item") && R(u)) }), L(), "performance" in window && window.addEventListener("load", () => { let t = performance.getEntriesByType("paint"), d = performance.getEntriesByType("navigation")[0]; console.log("First Contentful Paint:", t[0].startTime), console.log("DOM Content Loaded:", d.domContentLoadedEventEnd), console.log("Load Time:", d.loadEventEnd) }) } catch (e) { console.error("Error al inicializar productos:", e), f("Error al cargar productos. Por favor, int\xE9ntelo m\xE1s tarde.") }
        }; typeof document < "u" && document.addEventListener("DOMContentLoaded", function () { K(), J().catch(n => { console.error("Error al inicializar la aplicaci\xF3n:", n), f("Error al inicializar la aplicaci\xF3n. Por favor, actualice la p\xE1gina.") }) }); typeof D < "u" && (D.exports = { generateStableId: G }); document.addEventListener("DOMContentLoaded", function () { var n = document.createElement("script"); n.src = "assets/js/cart-enhancements.js", document.body.appendChild(n) })
    }); ve();
})();
